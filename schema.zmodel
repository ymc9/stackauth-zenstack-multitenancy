datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator js {
  provider = "prisma-client-js"
}

/// The shape of `auth()`
type Auth {
  /// Current user's ID
  userId          String  @id

  /// User's current team ID
  currentTeamId   String?

  /// User's role in the current team
  currentTeamRole String?

  @@auth
}

/// Todo list
model List {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orgId     String?  @default(auth().currentTeamId) @deny('update', true)
  ownerId   String   @default(auth().userId) @deny('update', true)
  title     String
  private   Boolean  @default(false)
  todos     Todo[]

  // require login
  @@deny('all', auth() == null)

  // tenant segregation: deny access if the user's current org doesn't match
  @@deny('all', auth().currentTeamId != orgId)

  // owner/admin has full access
  @@allow('all', auth().userId == ownerId || auth().currentTeamRole == 'admin')

  // can be read by org members if not private
  @@allow('read', !private)

  // when create, owner must be set to current user
  @@allow('create', ownerId == auth().userId)
}

/// Todo item
model Todo {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  list        List      @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId      String
  title       String
  completedAt DateTime?

  // full access if the parent list is readable
  @@allow('all', check(list, 'read'))
}
